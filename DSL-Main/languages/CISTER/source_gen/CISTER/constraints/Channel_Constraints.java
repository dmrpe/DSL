package CISTER.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class Channel_Constraints extends BaseConstraintsDescriptor {
  public Channel_Constraints() {
    super(MetaAdapterFactory.getConcept(0x7f38d80738ca44f1L, 0x941e7c2f776e2e59L, 0x4b6096e70ef2255aL, "CISTER.structure.Channel"));
  }

  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(MetaAdapterFactory.getProperty(0x7f38d80738ca44f1L, 0x941e7c2f776e2e59L, 0x4b6096e70ef2255aL, 0x1f694dc7ea3119dL, "size"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0x7f38d80738ca44f1L, 0x941e7c2f776e2e59L, 0x4b6096e70ef2255aL, 0x1f694dc7ea3119dL), this) {
      @Override
      public boolean hasOwnValidator() {
        return true;
      }
      @Override
      public boolean validateValue(SNode node, String propertyValue) {
        String propertyName = "size";
        return (SPropertyOperations.getString(propertyValue)).substring((SPropertyOperations.getString(propertyValue)).length() - 2, (SPropertyOperations.getString(propertyValue)).length()).contains("MB") || (SPropertyOperations.getString(propertyValue)).substring((SPropertyOperations.getString(propertyValue)).length() - 2, (SPropertyOperations.getString(propertyValue)).length()).contains("KB");
      }
    });
    return properties;
  }
}
